{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\echa328\\\\Downloads\\\\Unleashed-Frontend-Repo\\\\src\\\\components\\\\Admin\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Admin.css\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend } from \"chart.js\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, Tooltip, Legend);\nfunction Admin() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true); // New Loading State\n\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n  const doughnutChartConfig = useMemo(() => ({\n    labels: [\"Active Users\", \"Inactive Users\"],\n    datasets: [{\n      data: doughnutData.datasets[0].data,\n      backgroundColor: [\"#10b981\", \"#475569\"]\n    }]\n  }), [doughnutData]);\n  const [barChartData, setBarChartData] = useState({\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    datasets: [{\n      label: \"Daily User Logins\",\n      data: [0, 0, 0, 0, 0, 0, 0],\n      // Initial placeholder values\n      backgroundColor: \"#10b981\"\n    }]\n  });\n  const [categoryChartData, setCategoryChartData] = useState({\n    labels: [],\n    // Category labels\n    datasets: [{\n      label: \"Category Counts\",\n      data: [],\n      // Category counts\n      backgroundColor: [\"#1e293b\", \"#3b82f6\", \"#0ea5e9\", \"#22d3ee\", \"#06b6d4\", \"#0f766e\", \"#10b981\", \"#a3e635\", \"#eab308\", \"#ef4444\"],\n      borderRadius: 8\n    }]\n  });\n\n  // Optimized API Calls - Fetch Data Concurrently\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    let isMounted = true; // Track if the component is active\n\n    const fetchAllData = async () => {\n      if (!isMounted) return; // Prevent execution if component unmounted\n      try {\n        setLoading(true); // Set loading at the start\n\n        // Fetch data concurrently\n        const [usersRes, loginRes, reportsRes, categoryRes] = await Promise.all([fetch(`${API_BASE_URL}/api/users/all-users`, {\n          signal\n        }), fetch(`${API_BASE_URL}/api/users/get-login-status`, {\n          signal\n        }), fetch(`${API_BASE_URL}/api/report`, {\n          signal\n        }), fetch(`${API_BASE_URL}/api/conversation-history/all-category`, {\n          signal\n        })]);\n        if (!isMounted) return; // Stop if unmounted\n\n        // Parse JSON responses in parallel\n        const [usersData, loginStatusData, reportsData, categoryData] = await Promise.all([usersRes.json(), loginRes.json(), reportsRes.json(), categoryRes.json()]);\n        if (!isMounted) return; // Prevent state updates on unmounted component\n\n        // Batch state updates into a single render\n        setUsers(usersData);\n        setReports(reportsData);\n        const activeUsers = usersData.filter(user => user.isLoggedIn).length;\n        const inactiveUsers = usersData.length - activeUsers;\n        setDoughnutData(prev => ({\n          ...prev,\n          datasets: [{\n            data: [activeUsers, inactiveUsers],\n            backgroundColor: [\"#10b981\", \"#475569\"]\n          }]\n        }));\n        const loginCounts = new Array(7).fill(0);\n        loginStatusData.loginStatus.forEach(entry => {\n          const dayIndex = getDayIndex(entry.dayOfWeek);\n          if (dayIndex !== -1) loginCounts[dayIndex] = entry.loginCount;\n        });\n        setBarChartData(prev => ({\n          ...prev,\n          datasets: [{\n            label: \"Daily User Logins\",\n            data: loginCounts,\n            backgroundColor: \"#10b981\"\n          }]\n        }));\n        const categories = categoryData.map(item => item.category);\n        const counts = categoryData.map(item => item.count);\n        setCategoryChartData(prev => ({\n          ...prev,\n          labels: categories,\n          datasets: [{\n            ...prev.datasets[0],\n            data: counts\n          }]\n        }));\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"API call aborted.\");\n        } else {\n          console.error(\"Error fetching admin data:\", error);\n        }\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    fetchAllData();\n    return () => {\n      isMounted = false; // Mark component as unmounted\n      controller.abort(); // Cancel API calls on unmount\n      console.log(\"Admin component unmounted, API calls stopped.\");\n    };\n  }, []);\n  const getDayIndex = day => {\n    const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    return daysOfWeek.indexOf(day);\n  };\n\n  // Calculate new signups in the current month\n  const getCurrentMonthSignups = () => {\n    const currentMonth = new Date().getMonth();\n    const currentYear = new Date().getFullYear();\n    return users.filter(user => {\n      const signupDate = new Date(user.createdAt);\n      return signupDate.getMonth() === currentMonth && signupDate.getFullYear() === currentYear;\n    }).length;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-content admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Use the sidebar to navigate to different sections.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-boxes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: users.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New Signups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getCurrentMonthSignups()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reports Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: reports.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Daily Logins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: doughnutData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorite-questions-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Category Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This chart shows the count of each category in the conversation history.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorite-questions-chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: categoryChartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: false\n              },\n              tooltip: {\n                callbacks: {\n                  label: context => `${context.label}: ${context.raw} messages`\n                }\n              },\n              title: {\n                display: true,\n                text: \"Category Counts\",\n                font: {\n                  size: 22\n                }\n              }\n            },\n            animation: {\n              duration: 2000,\n              easing: \"easeOutBounce\"\n            },\n            scales: {\n              x: {\n                ticks: {\n                  color: \"#1e293b\"\n                },\n                grid: {\n                  color: \"#e5e7eb\"\n                }\n              },\n              y: {\n                ticks: {\n                  color: \"#1e293b\"\n                },\n                grid: {\n                  color: \"#e5e7eb\"\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"5O6pNsC9cgVHCk8UAlpDnrSSU6c=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","BarElement","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","Admin","_s","users","setUsers","reports","setReports","loading","setLoading","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","doughnutChartConfig","useMemo","labels","datasets","data","doughnutData","backgroundColor","barChartData","setBarChartData","label","categoryChartData","setCategoryChartData","borderRadius","controller","AbortController","signal","isMounted","fetchAllData","usersRes","loginRes","reportsRes","categoryRes","Promise","all","fetch","usersData","loginStatusData","reportsData","categoryData","json","activeUsers","filter","user","isLoggedIn","length","inactiveUsers","setDoughnutData","prev","loginCounts","Array","fill","loginStatus","forEach","entry","dayIndex","getDayIndex","dayOfWeek","loginCount","categories","map","item","category","counts","count","error","name","console","log","abort","day","daysOfWeek","indexOf","getCurrentMonthSignups","currentMonth","Date","getMonth","currentYear","getFullYear","signupDate","createdAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","context","raw","title","text","font","size","animation","duration","easing","scales","x","ticks","color","grid","y","_c","$RefreshReg$"],"sources":["C:/Users/echa328/Downloads/Unleashed-Frontend-Repo/src/components/Admin/Admin.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Admin.css\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction Admin() {\r\n  const [users, setUsers] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n  const [loading, setLoading] = useState(true); // New Loading State\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL\r\n\r\n  const doughnutChartConfig = useMemo(() => ({\r\n    labels: [\"Active Users\", \"Inactive Users\"],\r\n    datasets: [{ data: doughnutData.datasets[0].data, backgroundColor: [\"#10b981\", \"#475569\"] }],\r\n  }), [doughnutData]);\r\n  const [barChartData, setBarChartData] = useState({\r\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n    datasets: [\r\n      {\r\n        label: \"Daily User Logins\",\r\n        data: [0, 0, 0, 0, 0, 0, 0], // Initial placeholder values\r\n        backgroundColor: \"#10b981\",\r\n      },\r\n    ],\r\n  });\r\n  const [categoryChartData, setCategoryChartData] = useState({\r\n    labels: [], // Category labels\r\n    datasets: [\r\n      {\r\n        label: \"Category Counts\",\r\n        data: [], // Category counts\r\n        backgroundColor: [\r\n          \"#1e293b\",\r\n          \"#3b82f6\",\r\n          \"#0ea5e9\",\r\n          \"#22d3ee\",\r\n          \"#06b6d4\",\r\n          \"#0f766e\",\r\n          \"#10b981\",\r\n          \"#a3e635\",\r\n          \"#eab308\",\r\n          \"#ef4444\",\r\n        ],\r\n        borderRadius: 8,\r\n      },\r\n    ],\r\n  });\r\n\r\n // Optimized API Calls - Fetch Data Concurrently\r\n useEffect(() => {\r\n  const controller = new AbortController();\r\n  const signal = controller.signal;\r\n  let isMounted = true; // Track if the component is active\r\n\r\n  const fetchAllData = async () => {\r\n    if (!isMounted) return; // Prevent execution if component unmounted\r\n    try {\r\n      setLoading(true); // Set loading at the start\r\n\r\n      // Fetch data concurrently\r\n      const [usersRes, loginRes, reportsRes, categoryRes] = await Promise.all([\r\n        fetch(`${API_BASE_URL}/api/users/all-users`, { signal }),\r\n        fetch(`${API_BASE_URL}/api/users/get-login-status`, { signal }),\r\n        fetch(`${API_BASE_URL}/api/report`, { signal }),\r\n        fetch(`${API_BASE_URL}/api/conversation-history/all-category`, { signal })\r\n      ]);\r\n\r\n      if (!isMounted) return; // Stop if unmounted\r\n\r\n      // Parse JSON responses in parallel\r\n      const [usersData, loginStatusData, reportsData, categoryData] = await Promise.all([\r\n        usersRes.json(),\r\n        loginRes.json(),\r\n        reportsRes.json(),\r\n        categoryRes.json()\r\n      ]);\r\n\r\n      if (!isMounted) return; // Prevent state updates on unmounted component\r\n\r\n      // Batch state updates into a single render\r\n      setUsers(usersData);\r\n      setReports(reportsData);\r\n\r\n      const activeUsers = usersData.filter(user => user.isLoggedIn).length;\r\n      const inactiveUsers = usersData.length - activeUsers;\r\n      setDoughnutData(prev => ({\r\n        ...prev,\r\n        datasets: [{ data: [activeUsers, inactiveUsers], backgroundColor: [\"#10b981\", \"#475569\"] }]\r\n      }));\r\n\r\n      const loginCounts = new Array(7).fill(0);\r\n      loginStatusData.loginStatus.forEach(entry => {\r\n        const dayIndex = getDayIndex(entry.dayOfWeek);\r\n        if (dayIndex !== -1) loginCounts[dayIndex] = entry.loginCount;\r\n      });\r\n\r\n      setBarChartData(prev => ({\r\n        ...prev,\r\n        datasets: [{ label: \"Daily User Logins\", data: loginCounts, backgroundColor: \"#10b981\" }]\r\n      }));\r\n\r\n      const categories = categoryData.map(item => item.category);\r\n      const counts = categoryData.map(item => item.count);\r\n      setCategoryChartData(prev => ({\r\n        ...prev,\r\n        labels: categories,\r\n        datasets: [{ ...prev.datasets[0], data: counts }]\r\n      }));\r\n\r\n    } catch (error) {\r\n      if (error.name === \"AbortError\") {\r\n        console.log(\"API call aborted.\");\r\n      } else {\r\n        console.error(\"Error fetching admin data:\", error);\r\n      }\r\n    } finally {\r\n      if (isMounted) setLoading(false);\r\n    }\r\n  };\r\n\r\n  fetchAllData();\r\n\r\n  return () => {\r\n    isMounted = false; // Mark component as unmounted\r\n    controller.abort(); // Cancel API calls on unmount\r\n    console.log(\"Admin component unmounted, API calls stopped.\");\r\n  };\r\n}, []);\r\n\r\n\r\n  const getDayIndex = (day) => {\r\n    const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n    return daysOfWeek.indexOf(day);\r\n  };\r\n\r\n  // Calculate new signups in the current month\r\n  const getCurrentMonthSignups = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    const currentYear = new Date().getFullYear();\r\n    return users.filter((user) => {\r\n      const signupDate = new Date(user.createdAt);\r\n      return signupDate.getMonth() === currentMonth && signupDate.getFullYear() === currentYear;\r\n    }).length;\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-content admin-dashboard\">\r\n      <h1>Welcome to the Admin Dashboard</h1>\r\n      <p>Use the sidebar to navigate to different sections.</p>\r\n\r\n      {/* Info Boxes */}\r\n      <div className=\"info-boxes\">\r\n        <div className=\"info-box\">\r\n          <h3>Total Users</h3>\r\n          <p>{users.length}</p>\r\n        </div>\r\n        <div className=\"info-box\">\r\n          <h3>New Signups</h3>\r\n          <p>{getCurrentMonthSignups()}</p>\r\n        </div>\r\n        <div className=\"info-box\">\r\n          <h3>Reports Pending</h3>\r\n          <p>{reports.length}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Daily Logins and User Status */}\r\n      <div className=\"graphs\">\r\n        <div className=\"graph-container\">\r\n          <h3>Daily Logins</h3>\r\n          <Bar data={barChartData} />\r\n        </div>\r\n        <div className=\"graph-container\">\r\n          <h3>User Status</h3>\r\n          <Doughnut data={doughnutData} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Category Count Bar Chart */}\r\n      <div className=\"favorite-questions-section\">\r\n        <h2>Category Counts</h2>\r\n        <p>\r\n          This chart shows the count of each category in the conversation\r\n          history.\r\n        </p>\r\n        <div className=\"favorite-questions-chart\">\r\n          <Bar\r\n            data={categoryChartData}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  display: false,\r\n                },\r\n                tooltip: {\r\n                  callbacks: {\r\n                    label: (context) =>\r\n                      `${context.label}: ${context.raw} messages`,\r\n                  },\r\n                },\r\n                title: {\r\n                  display: true,\r\n                  text: \"Category Counts\",\r\n                  font: {\r\n                    size: 22,\r\n                  },\r\n                },\r\n              },\r\n              animation: {\r\n                duration: 2000,\r\n                easing: \"easeOutBounce\",\r\n              },\r\n              scales: {\r\n                x: {\r\n                  ticks: {\r\n                    color: \"#1e293b\",\r\n                  },\r\n                  grid: {\r\n                    color: \"#e5e7eb\",\r\n                  },\r\n                },\r\n                y: {\r\n                  ticks: {\r\n                    color: \"#1e293b\",\r\n                  },\r\n                  grid: {\r\n                    color: \"#e5e7eb\",\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Admin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa;AACpB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,iBAAiB;AAC/C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,MACF,CAAC;AAED,SAASI,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C,MAAMwB,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAEvD,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,OAAO;IACzCC,MAAM,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;IAC1CC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAEC,YAAY,CAACF,QAAQ,CAAC,CAAC,CAAC,CAACC,IAAI;MAAEE,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS;IAAE,CAAC;EAC7F,CAAC,CAAC,EAAE,CAACD,YAAY,CAAC,CAAC;EACnB,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC;IAC/C8B,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACzDC,QAAQ,EAAE,CACR;MACEM,KAAK,EAAE,mBAAmB;MAC1BL,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MAC7BE,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC,CAAC;EACF,MAAM,CAACI,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvC,QAAQ,CAAC;IACzD8B,MAAM,EAAE,EAAE;IAAE;IACZC,QAAQ,EAAE,CACR;MACEM,KAAK,EAAE,iBAAiB;MACxBL,IAAI,EAAE,EAAE;MAAE;MACVE,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;MACDM,YAAY,EAAE;IAChB,CAAC;EAEL,CAAC,CAAC;;EAEH;EACAvC,SAAS,CAAC,MAAM;IACf,MAAMwC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,MAAMC,MAAM,GAAGF,UAAU,CAACE,MAAM;IAChC,IAAIC,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEtB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACD,SAAS,EAAE,OAAO,CAAC;MACxB,IAAI;QACFrB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;QAElB;QACA,MAAM,CAACuB,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACtEC,KAAK,CAAC,GAAG5B,YAAY,sBAAsB,EAAE;UAAEmB;QAAO,CAAC,CAAC,EACxDS,KAAK,CAAC,GAAG5B,YAAY,6BAA6B,EAAE;UAAEmB;QAAO,CAAC,CAAC,EAC/DS,KAAK,CAAC,GAAG5B,YAAY,aAAa,EAAE;UAAEmB;QAAO,CAAC,CAAC,EAC/CS,KAAK,CAAC,GAAG5B,YAAY,wCAAwC,EAAE;UAAEmB;QAAO,CAAC,CAAC,CAC3E,CAAC;QAEF,IAAI,CAACC,SAAS,EAAE,OAAO,CAAC;;QAExB;QACA,MAAM,CAACS,SAAS,EAAEC,eAAe,EAAEC,WAAW,EAAEC,YAAY,CAAC,GAAG,MAAMN,OAAO,CAACC,GAAG,CAAC,CAChFL,QAAQ,CAACW,IAAI,CAAC,CAAC,EACfV,QAAQ,CAACU,IAAI,CAAC,CAAC,EACfT,UAAU,CAACS,IAAI,CAAC,CAAC,EACjBR,WAAW,CAACQ,IAAI,CAAC,CAAC,CACnB,CAAC;QAEF,IAAI,CAACb,SAAS,EAAE,OAAO,CAAC;;QAExB;QACAzB,QAAQ,CAACkC,SAAS,CAAC;QACnBhC,UAAU,CAACkC,WAAW,CAAC;QAEvB,MAAMG,WAAW,GAAGL,SAAS,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,CAACC,MAAM;QACpE,MAAMC,aAAa,GAAGV,SAAS,CAACS,MAAM,GAAGJ,WAAW;QACpDM,eAAe,CAACC,IAAI,KAAK;UACvB,GAAGA,IAAI;UACPlC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,CAAC0B,WAAW,EAAEK,aAAa,CAAC;YAAE7B,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS;UAAE,CAAC;QAC5F,CAAC,CAAC,CAAC;QAEH,MAAMgC,WAAW,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;QACxCd,eAAe,CAACe,WAAW,CAACC,OAAO,CAACC,KAAK,IAAI;UAC3C,MAAMC,QAAQ,GAAGC,WAAW,CAACF,KAAK,CAACG,SAAS,CAAC;UAC7C,IAAIF,QAAQ,KAAK,CAAC,CAAC,EAAEN,WAAW,CAACM,QAAQ,CAAC,GAAGD,KAAK,CAACI,UAAU;QAC/D,CAAC,CAAC;QAEFvC,eAAe,CAAC6B,IAAI,KAAK;UACvB,GAAGA,IAAI;UACPlC,QAAQ,EAAE,CAAC;YAAEM,KAAK,EAAE,mBAAmB;YAAEL,IAAI,EAAEkC,WAAW;YAAEhC,eAAe,EAAE;UAAU,CAAC;QAC1F,CAAC,CAAC,CAAC;QAEH,MAAM0C,UAAU,GAAGpB,YAAY,CAACqB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;QAC1D,MAAMC,MAAM,GAAGxB,YAAY,CAACqB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,CAAC;QACnD1C,oBAAoB,CAAC0B,IAAI,KAAK;UAC5B,GAAGA,IAAI;UACPnC,MAAM,EAAE8C,UAAU;UAClB7C,QAAQ,EAAE,CAAC;YAAE,GAAGkC,IAAI,CAAClC,QAAQ,CAAC,CAAC,CAAC;YAAEC,IAAI,EAAEgD;UAAO,CAAC;QAClD,CAAC,CAAC,CAAC;MAEL,CAAC,CAAC,OAAOE,KAAK,EAAE;QACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;UAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAClC,CAAC,MAAM;UACLD,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF,CAAC,SAAS;QACR,IAAItC,SAAS,EAAErB,UAAU,CAAC,KAAK,CAAC;MAClC;IACF,CAAC;IAEDsB,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK,CAAC,CAAC;MACnBH,UAAU,CAAC6C,KAAK,CAAC,CAAC,CAAC,CAAC;MACpBF,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGJ,MAAMZ,WAAW,GAAIc,GAAG,IAAK;IAC3B,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;IACjG,OAAOA,UAAU,CAACC,OAAO,CAACF,GAAG,CAAC;EAChC,CAAC;;EAED;EACA,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC1C,MAAMC,WAAW,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;IAC5C,OAAO7E,KAAK,CAACyC,MAAM,CAAEC,IAAI,IAAK;MAC5B,MAAMoC,UAAU,GAAG,IAAIJ,IAAI,CAAChC,IAAI,CAACqC,SAAS,CAAC;MAC3C,OAAOD,UAAU,CAACH,QAAQ,CAAC,CAAC,KAAKF,YAAY,IAAIK,UAAU,CAACD,WAAW,CAAC,CAAC,KAAKD,WAAW;IAC3F,CAAC,CAAC,CAAChC,MAAM;EACX,CAAC;EAED,oBACEhD,OAAA;IAAKoF,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAC5CrF,OAAA;MAAAqF,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCzF,OAAA;MAAAqF,QAAA,EAAG;IAAkD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGzDzF,OAAA;MAAKoF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBrF,OAAA;QAAKoF,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBrF,OAAA;UAAAqF,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBzF,OAAA;UAAAqF,QAAA,EAAIjF,KAAK,CAAC4C;QAAM;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACNzF,OAAA;QAAKoF,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBrF,OAAA;UAAAqF,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBzF,OAAA;UAAAqF,QAAA,EAAIT,sBAAsB,CAAC;QAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACNzF,OAAA;QAAKoF,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBrF,OAAA;UAAAqF,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBzF,OAAA;UAAAqF,QAAA,EAAI/E,OAAO,CAAC0C;QAAM;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzF,OAAA;MAAKoF,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBrF,OAAA;QAAKoF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrF,OAAA;UAAAqF,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBzF,OAAA,CAACX,GAAG;UAAC6B,IAAI,EAAEG;QAAa;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACNzF,OAAA;QAAKoF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrF,OAAA;UAAAqF,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBzF,OAAA,CAACV,QAAQ;UAAC4B,IAAI,EAAEC;QAAa;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzF,OAAA;MAAKoF,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCrF,OAAA;QAAAqF,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBzF,OAAA;QAAAqF,QAAA,EAAG;MAGH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJzF,OAAA;QAAKoF,SAAS,EAAC,0BAA0B;QAAAC,QAAA,eACvCrF,OAAA,CAACX,GAAG;UACF6B,IAAI,EAAEM,iBAAkB;UACxBkE,OAAO,EAAE;YACPC,UAAU,EAAE,IAAI;YAChBC,mBAAmB,EAAE,KAAK;YAC1BC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNC,OAAO,EAAE;cACX,CAAC;cACDC,OAAO,EAAE;gBACPC,SAAS,EAAE;kBACT1E,KAAK,EAAG2E,OAAO,IACb,GAAGA,OAAO,CAAC3E,KAAK,KAAK2E,OAAO,CAACC,GAAG;gBACpC;cACF,CAAC;cACDC,KAAK,EAAE;gBACLL,OAAO,EAAE,IAAI;gBACbM,IAAI,EAAE,iBAAiB;gBACvBC,IAAI,EAAE;kBACJC,IAAI,EAAE;gBACR;cACF;YACF,CAAC;YACDC,SAAS,EAAE;cACTC,QAAQ,EAAE,IAAI;cACdC,MAAM,EAAE;YACV,CAAC;YACDC,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDC,KAAK,EAAE;kBACLC,KAAK,EAAE;gBACT,CAAC;gBACDC,IAAI,EAAE;kBACJD,KAAK,EAAE;gBACT;cACF,CAAC;cACDE,CAAC,EAAE;gBACDH,KAAK,EAAE;kBACLC,KAAK,EAAE;gBACT,CAAC;gBACDC,IAAI,EAAE;kBACJD,KAAK,EAAE;gBACT;cACF;YACF;UACF;QAAE;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV;AAACtF,EAAA,CA1OQD,KAAK;AAAA+G,EAAA,GAAL/G,KAAK;AA4Od,eAAeA,KAAK;AAAC,IAAA+G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}