{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Alert from\"@mui/material/Alert\";import{useLocation}from\"react-router-dom\";import{useNavigate}from\"react-router-dom\";import\"./LoginRegister.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ResetPassword(_ref){let{setIsRegister}=_ref;const[registerAlert,setRegisterAlert]=useState(null);const navigate=useNavigate();const[loading,setLoading]=useState(false);const[hideForm,setHideForm]=useState(false);const[email,setEmail]=useState(\"\");const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;const useQuery=()=>{return new URLSearchParams(useLocation().search);};useEffect(()=>{const query=new URLSearchParams(window.location.search);const emailParam=query.get(\"email\");if(emailParam){setEmail(decodeURIComponent(emailParam));}},[]);const handleResetPassword=async e=>{e.preventDefault();const password1=e.target.password1.value;const password2=e.target.password2.value;// Regular expression to check if the password contains at least one uppercase letter, one special character, and is at least 8 characters long\nconst passwordRegex=/^(?=.*[A-Z])(?=.*[\\W_]).{8,}$/;setRegisterAlert(null);setLoading(true);setHideForm(true);// Hide the registration form\ntry{if(password1!==password2){setTimeout(()=>{setLoading(false);// Hide spinner\nsetRegisterAlert({type:\"error\",message:\"Error: Password does not match.\"});setTimeout(()=>{setRegisterAlert(null);// Clear alert after delay\nsetHideForm(false);// Reset form visibility\nsetIsRegister(false);// Switch back to the login form\n},2000);// Show alert for 2 seconds\n},1000);}if(!passwordRegex.test(password1)){setTimeout(()=>{setLoading(false);// Hide spinner\nsetHideForm(false);// Reset form visibility\nsetRegisterAlert({type:\"error\",message:\"Error: Password must be at least 8 characters long and contain at least one uppercase letter and one special character.\"});setTimeout(()=>{setRegisterAlert(null);// Clear alert after delay\nsetHideForm(false);// Reset form visibility\n},3000);// Show alert for 2 seconds\n},1000);return;}const response=await fetch(\"\".concat(API_BASE_URL,\"/api/users/Reset-Password\"),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({Email:email,NewPassword:password1})});if(response.ok){setTimeout(()=>{setLoading(false);// Hide spinner\nsetRegisterAlert({type:\"success\",message:\"Your Password has been reset.\"});setTimeout(()=>{setRegisterAlert(null);// Clear alert after delay\nnavigate(\"/login\");},2000);// Show alert for 2 seconds\n},1000);}else{const errorData=await response.text();setLoading(false);// Hide spinner\nsetHideForm(false);// Reset form visibility\nsetRegisterAlert({type:\"error\",message:\"Error: \".concat(errorData)});setTimeout(()=>{setRegisterAlert(null);// Clear alert after delay\n},3000);// Show alert for 2 seconds\n}}catch(error){setLoading(false);// Hide spinner\nsetHideForm(false);// Reset form visibility\nsetRegisterAlert({type:\"error\",message:\"Error connecting to the server.\"});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-register-page\",children:[registerAlert&&/*#__PURE__*/_jsx(\"div\",{className:\"alert-container \".concat(registerAlert.type===\"success\"?\"alert-center\":\"\"),children:/*#__PURE__*/_jsx(Alert,{severity:registerAlert.type,children:registerAlert.message})}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-spinner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Creating user...\"})]}),!loading&&!hideForm&&/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleResetPassword,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email\",value:email,disabled:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password1\",placeholder:\"New Password\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password2\",placeholder:\"New Password\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Reset Password\"})]})})]});}export default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","Alert","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","ResetPassword","_ref","setIsRegister","registerAlert","setRegisterAlert","navigate","loading","setLoading","hideForm","setHideForm","email","setEmail","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","useQuery","URLSearchParams","search","query","window","location","emailParam","get","decodeURIComponent","handleResetPassword","e","preventDefault","password1","target","value","password2","passwordRegex","setTimeout","type","message","test","response","fetch","concat","method","headers","body","JSON","stringify","Email","NewPassword","ok","errorData","text","error","className","children","severity","onSubmit","name","placeholder","disabled","required"],"sources":["C:/Users/echa328/Downloads/unleashai-frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./LoginRegister.css\";\r\n\r\nfunction ResetPassword({ setIsRegister }) {\r\n  const [registerAlert, setRegisterAlert] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [hideForm, setHideForm] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL\r\n\r\n  const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(window.location.search);\r\n    const emailParam = query.get(\"email\");\r\n    if (emailParam) {\r\n      setEmail(decodeURIComponent(emailParam));\r\n    }\r\n  }, []);\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const password1 = e.target.password1.value;\r\n    const password2 = e.target.password2.value;\r\n\r\n    // Regular expression to check if the password contains at least one uppercase letter, one special character, and is at least 8 characters long\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[\\W_]).{8,}$/;\r\n\r\n    setRegisterAlert(null);\r\n    setLoading(true);\r\n    setHideForm(true); // Hide the registration form\r\n\r\n    try {\r\n      if (password1 !== password2) {\r\n        setTimeout(() => {\r\n          setLoading(false); // Hide spinner\r\n          setRegisterAlert({\r\n            type: \"error\",\r\n            message: \"Error: Password does not match.\",\r\n          });\r\n          setTimeout(() => {\r\n            setRegisterAlert(null); // Clear alert after delay\r\n            setHideForm(false); // Reset form visibility\r\n            setIsRegister(false); // Switch back to the login form\r\n          }, 2000); // Show alert for 2 seconds\r\n        }, 1000);\r\n      }\r\n\r\n      if (!passwordRegex.test(password1)) {\r\n        setTimeout(() => {\r\n          setLoading(false); // Hide spinner\r\n          setHideForm(false); // Reset form visibility\r\n          setRegisterAlert({\r\n            type: \"error\",\r\n            message:\r\n              \"Error: Password must be at least 8 characters long and contain at least one uppercase letter and one special character.\",\r\n          });\r\n          setTimeout(() => {\r\n            setRegisterAlert(null); // Clear alert after delay\r\n            setHideForm(false); // Reset form visibility\r\n          }, 3000); // Show alert for 2 seconds\r\n        }, 1000);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/users/Reset-Password`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            Email: email,\r\n            NewPassword: password1,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setTimeout(() => {\r\n          setLoading(false); // Hide spinner\r\n          setRegisterAlert({\r\n            type: \"success\",\r\n            message: \"Your Password has been reset.\",\r\n          });\r\n          setTimeout(() => {\r\n            setRegisterAlert(null); // Clear alert after delay\r\n            navigate(\"/login\");\r\n          }, 2000); // Show alert for 2 seconds\r\n        }, 1000);\r\n      } else {\r\n        const errorData = await response.text();\r\n        setLoading(false); // Hide spinner\r\n        setHideForm(false); // Reset form visibility\r\n        setRegisterAlert({ type: \"error\", message: `Error: ${errorData}` });\r\n        setTimeout(() => {\r\n          setRegisterAlert(null); // Clear alert after delay\r\n        }, 3000); // Show alert for 2 seconds\r\n      }\r\n    } catch (error) {\r\n      setLoading(false); // Hide spinner\r\n      setHideForm(false); // Reset form visibility\r\n      setRegisterAlert({\r\n        type: \"error\",\r\n        message: \"Error connecting to the server.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-register-page\">\r\n      {registerAlert && (\r\n        <div\r\n          className={`alert-container ${\r\n            registerAlert.type === \"success\" ? \"alert-center\" : \"\"\r\n          }`}\r\n        >\r\n          <Alert severity={registerAlert.type}>{registerAlert.message}</Alert>\r\n        </div>\r\n      )}\r\n\r\n      {loading && (\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Creating user...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Register Form */}\r\n      {!loading && !hideForm && (\r\n        <div className=\"form-container\">\r\n          <form className=\"form\" onSubmit={handleResetPassword}>\r\n            <h2>Reset Password</h2>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              disabled\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password1\"\r\n              placeholder=\"New Password\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password2\"\r\n              placeholder=\"New Password\"\r\n              required\r\n            />\r\n            <button type=\"submit\">Reset Password</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}