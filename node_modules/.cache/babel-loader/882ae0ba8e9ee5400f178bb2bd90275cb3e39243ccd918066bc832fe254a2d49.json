{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\echa328\\\\Downloads\\\\Unleashed-Frontend-Repo\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Alert from \"@mui/material/Alert\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./LoginRegister.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsLoggedIn,\n  setIsRegister,\n  setUser\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(\"login\"); // 'login' | 'mfa'\n  // const [email, setEmail] = useState('');\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [hideForm, setHideForm] = useState(false);\n  const [mfaCode, setMfaCode] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [timer, setTimer] = useState(60);\n  // const [resendDisabled, setResendDisabled] = useState(true);\n  const [verifyAlert, setVerifyAlert] = useState(null);\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\n  // Google Login Handler\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    const decoded = jwtDecode(credentialResponse.credential);\n    setHideForm(true);\n    setIsLoggedIn(true);\n    setUser({\n      username: decoded.name,\n      role: \"normal\"\n    }); // Set full user object\n    setLoginAlert({\n      type: \"success\",\n      message: `Welcome, ${decoded.name}!`\n    });\n    setTimeout(() => navigate(\"/\"), 2000);\n  };\n  const handleGoogleLoginError = () => {\n    setLoginAlert({\n      type: \"error\",\n      message: \"Google login failed.\"\n    });\n  };\n  useEffect(() => {\n    if (step === \"verify\" && timer > 0) {\n      const countdown = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(countdown); // Clear interval on component unmount\n    } else if (timer === 0) {\n      handleResendCode(); // Automatically resend code after 1 minute\n      setTimer(60); // Reset the timer\n    }\n  }, [step, timer]);\n\n  // Send Credentials to Backend for Validation and Request MFA Code\n  const handleLoginSubmit = async e => {\n    e.preventDefault();\n    const inputUsername = e.target.username.value;\n    const inputPassword = e.target.password.value;\n    setUsername(inputUsername);\n    setPassword(inputPassword);\n    setLoginAlert(null);\n    setLoading(true);\n    setHideForm(false); // No Hide the registration form\n    setVerifyAlert(null); // Clear existing alert\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/mfa/send-code`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: inputUsername,\n          password: inputPassword\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        console.log(\"API Response:\", result); // Debug the response\n        setUser({\n          username,\n          role: result.role\n        }); // Use the role from response\n\n        console.log(`Logged in as: ${result.role}`); // Debug the role\n\n        // Fetch and save userId\n        const userIdResponse = await fetch(`${API_BASE_URL}/api/users/get-user-id?username=${encodeURIComponent(inputUsername)}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (userIdResponse.ok) {\n          const userIdData = await userIdResponse.json();\n          localStorage.setItem(\"user_id\", userIdData.userId); // Save userId to local storage\n          console.log(\"User ID:\", userIdData.userId);\n        } else {\n          console.error(\"Failed to fetch user ID:\", userIdResponse.status);\n        }\n        if (result.role === \"admin\") {\n          // Admin bypasses MFA verification\n          setLoginAlert({\n            type: \"success\",\n            message: \"Login Successful as Admin!\"\n          });\n          setHideForm(true);\n          setIsLoggedIn(true); // Directly mark as logged in\n\n          // Delay the navigation to allow alert to be visible\n          setTimeout(() => {\n            setVerifyAlert(null); // Clear alert\n            navigate(\"/\"); // Redirect to home page\n          }, 1000); // 1-second delay for the alert visibility\n        } else {\n          // Regular users proceed with MFA verification\n          setVerifyAlert({\n            type: \"success\",\n            message: \"MFA code sent to your email.\"\n          });\n          setTimeout(() => {\n            setVerifyAlert(null);\n          }, 5000);\n          setStep(\"verify\"); // Move to code verification step\n        }\n      } else {\n        // Handle invalid credentials\n        setVerifyAlert({\n          type: \"error\",\n          message: result.message || \"Invalid credentials.\"\n        });\n        setTimeout(() => {\n          setVerifyAlert(null);\n          setIsLoggedIn(false);\n          setHideForm(false);\n        }, 3000);\n      }\n    } catch (error) {\n      // Handle server connection error\n      setVerifyAlert({\n        type: \"error\",\n        message: \"Error connecting to the server. Please try again.\"\n      });\n      setTimeout(() => {\n        setVerifyAlert(null);\n        setIsLoggedIn(false);\n        setHideForm(false);\n      }, 3000);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Verify MFA Code\n  const handleVerifyCode = async () => {\n    setLoading(true);\n    setVerifyAlert(null); // Clear existing alert\n    setLoginAlert(null);\n    setHideForm(false);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/mfa/verify-code`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          code: mfaCode\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setVerifyAlert({\n          type: \"success\",\n          message: result.message || \"MFA verification successful.\"\n        });\n        const userId = localStorage.getItem(\"user_id\"); // Retrieve userId from local storage\n        await updateUserLoggedInStatus(userId, true); // Mark user as logged in in the database\n\n        // Hide the form and show loading spinner in the middle\n        setTimeout(() => {\n          setHideForm(true); // Hide the form\n          setLoading(true); // Keep showing the loading spinner in the middle\n\n          // Final navigation after delay\n          setTimeout(() => {\n            setIsLoggedIn(true); // Update login state\n            setUser({\n              username: username,\n              role: result.role\n            }); // Set full user object\n            navigate(\"/\"); // Redirect to home page\n          }, 3000); // 3-second delay for loading spinner\n        }, 1000); // Short delay to hide form\n      } else {\n        setVerifyAlert({\n          type: \"error\",\n          message: result.message || \"Invalid MFA code.\"\n        });\n        setTimeout(() => {\n          setVerifyAlert(null);\n          setLoading(false);\n        }, 2000); // 2-second delay to delete the alert\n      }\n    } catch (error) {\n      setVerifyAlert({\n        type: \"error\",\n        message: \"Error verifying the MFA code. Please try again.\"\n      });\n      setTimeout(() => {\n        setVerifyAlert(null);\n        setLoading(false);\n      }, 2000); // 2-second delay to clear alert\n    }\n  };\n\n  // Resend Code Function\n  const handleResendCode = async () => {\n    setLoginAlert(null); // Clear existing alert\n    setVerifyAlert(null); // Clear existing alert\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/mfa/send-code`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        setTimeout(() => {\n          setVerifyAlert(null);\n        }, 2000);\n      } else {\n        const result = await response.json();\n        setVerifyAlert({\n          type: \"error\",\n          message: result.message || \"Failed to resend the code.\"\n        });\n        setTimeout(() => {\n          setVerifyAlert(null);\n        }, 2000);\n      }\n    } catch (error) {\n      setVerifyAlert({\n        type: \"error\",\n        message: \"Error resending the code. Please try again.\"\n      });\n      setTimeout(() => {\n        setVerifyAlert(null);\n      }, 2000);\n    }\n  };\n\n  //Send link via user email\n  const handleSendLink = async e => {\n    e.preventDefault();\n    const inputEmail = email;\n    setEmail(inputEmail);\n    setLoginAlert(null);\n    setLoading(true);\n    setHideForm(false); // No Hide the registration form\n    setVerifyAlert(null); // Clear existing alert\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/users/send-verification-by-email/${email}`, {\n        method: \"POST\"\n      });\n      //const result = await response.json();\n      if (response.ok) {\n        // Admin bypasses MFA verification\n        setLoginAlert({\n          type: \"success\",\n          message: \"MFA link sent successfully.\"\n        });\n        setTimeout(() => {\n          setVerifyAlert(null); // Clear alert\n          setLoginAlert(null);\n          navigate(\"/\"); // Redirect to home page\n        }, 3000);\n      } else {\n        setEmail(\"\");\n        setLoginAlert({\n          type: \"error\",\n          message: `Error sending the link to ${inputEmail}. Please try again.`\n        });\n        setTimeout(() => {\n          setLoginAlert(null);\n          setStep(\"Link\");\n          setLoading(false);\n        }, 2000);\n      }\n    } catch (error) {\n      setVerifyAlert({\n        type: \"error\",\n        message: `Error sending the link to ${inputEmail}. Please try again.`\n      });\n      setTimeout(() => {\n        setVerifyAlert(null);\n      }, 2000);\n    }\n  };\n  const updateUserLoggedInStatus = async (userId, isLoggedIn) => {\n    try {\n      const response = await fetch(`http://localhost:5050/api/users/update-login-status`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          isLoggedIn\n        })\n      });\n      if (!response.ok) {\n        console.error(\"Failed to update login status:\", response.status);\n      } else {\n        console.log(\"User login status updated successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error updating login status:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-register-page\",\n    children: [loginAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert-container ${loginAlert.type === \"success\" ? \"alert-center\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: loginAlert.type,\n        children: loginAlert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this), verifyAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `verify-alert-container verify-${verifyAlert.type === \"success\" ? \"alert-center\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: verifyAlert.type,\n        className: \"custom-verify-alert\",\n        children: verifyAlert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this), step === \"login\" && !loading && !hideForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleLoginSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"switch-form\",\n            onClick: () => setIsRegister(true),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"switch-form\",\n            onClick: () => setStep(\"Link\"),\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Or Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleLoginSuccess,\n          onError: handleGoogleLoginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this), step === \"verify\" && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"verify-title\",\n        children: \"Verify Your Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"verify-instructions\",\n        children: \"A 6-digit verification code has been sent to your email. Please enter it below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter 6-digit code\",\n        value: mfaCode,\n        onChange: e => setMfaCode(e.target.value),\n        maxLength: \"6\",\n        className: \"verify-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyCode,\n        className: \"verify-button\",\n        disabled: !mfaCode || mfaCode.length !== 6,\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStep(\"login\"),\n        className: \"back-to-login-button\",\n        children: \"Go Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer-text\",\n        children: [\"A new code will be sent automatically in \", timer, \"s.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }, this), step === \"Link\" && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"verify-title\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"verify-instructions\",\n          children: \"Please enter your email and change your password with the link.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Email\",\n          value: email,\n          autoFocus: true,\n          onChange: e => setEmail(e.target.value),\n          maxLength: \"\",\n          className: \"input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendLink,\n          className: \"button\",\n          children: \"Send Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setStep(\"login\"),\n          className: \"back-to-login-button\",\n          children: \"Go Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"9QSohMuHWqgYlCLqW5AKcoy27uo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","useEffect","GoogleLogin","jwtDecode","Alert","useNavigate","jsxDEV","_jsxDEV","Login","setIsLoggedIn","setIsRegister","setUser","_s","navigate","loginAlert","setLoginAlert","loading","setLoading","step","setStep","username","setUsername","password","setPassword","hideForm","setHideForm","mfaCode","setMfaCode","email","setEmail","timer","setTimer","verifyAlert","setVerifyAlert","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","handleGoogleLoginSuccess","credentialResponse","decoded","credential","name","role","type","message","setTimeout","handleGoogleLoginError","countdown","setInterval","prev","clearInterval","handleResendCode","handleLoginSubmit","e","preventDefault","inputUsername","target","value","inputPassword","response","fetch","method","headers","body","JSON","stringify","result","json","ok","console","log","userIdResponse","encodeURIComponent","userIdData","localStorage","setItem","userId","error","status","handleVerifyCode","code","getItem","updateUserLoggedInStatus","handleSendLink","inputEmail","isLoggedIn","className","children","severity","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","onClick","onSuccess","onError","maxLength","disabled","length","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/echa328/Downloads/Unleashed-Frontend-Repo/src/components/Login.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./LoginRegister.css\";\r\n\r\nfunction Login({ setIsLoggedIn, setIsRegister, setUser }) {\r\n  const navigate = useNavigate();\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [step, setStep] = useState(\"login\"); // 'login' | 'mfa'\r\n  // const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [hideForm, setHideForm] = useState(false);\r\n  const [mfaCode, setMfaCode] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [timer, setTimer] = useState(60);\r\n  // const [resendDisabled, setResendDisabled] = useState(true);\r\n  const [verifyAlert, setVerifyAlert] = useState(null);\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL\r\n\r\n  // Google Login Handler\r\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\r\n    const decoded = jwtDecode(credentialResponse.credential);\r\n    setHideForm(true);\r\n    setIsLoggedIn(true);\r\n    setUser({ username: decoded.name, role: \"normal\" }); // Set full user object\r\n    setLoginAlert({ type: \"success\", message: `Welcome, ${decoded.name}!` });\r\n    setTimeout(() => navigate(\"/\"), 2000);\r\n  };\r\n\r\n  const handleGoogleLoginError = () => {\r\n    setLoginAlert({ type: \"error\", message: \"Google login failed.\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (step === \"verify\" && timer > 0) {\r\n      const countdown = setInterval(() => {\r\n        setTimer((prev) => prev - 1);\r\n      }, 1000);\r\n\r\n      return () => clearInterval(countdown); // Clear interval on component unmount\r\n    } else if (timer === 0) {\r\n      handleResendCode(); // Automatically resend code after 1 minute\r\n      setTimer(60); // Reset the timer\r\n    }\r\n  }, [step, timer]);\r\n\r\n  // Send Credentials to Backend for Validation and Request MFA Code\r\n  const handleLoginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const inputUsername = e.target.username.value;\r\n    const inputPassword = e.target.password.value;\r\n\r\n    setUsername(inputUsername);\r\n    setPassword(inputPassword);\r\n    setLoginAlert(null);\r\n    setLoading(true);\r\n    setHideForm(false); // No Hide the registration form\r\n    setVerifyAlert(null); // Clear existing alert\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/mfa/send-code`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          username: inputUsername,\r\n          password: inputPassword,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log(\"API Response:\", result); // Debug the response\r\n        setUser({ username, role: result.role }); // Use the role from response\r\n\r\n        console.log(`Logged in as: ${result.role}`); // Debug the role\r\n\r\n        // Fetch and save userId\r\n        const userIdResponse = await fetch(\r\n          `${API_BASE_URL}/api/users/get-user-id?username=${encodeURIComponent(inputUsername)}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        );\r\n\r\n        if (userIdResponse.ok) {\r\n          const userIdData = await userIdResponse.json();\r\n          localStorage.setItem(\"user_id\", userIdData.userId); // Save userId to local storage\r\n          console.log(\"User ID:\", userIdData.userId);\r\n        } else {\r\n          console.error(\"Failed to fetch user ID:\", userIdResponse.status);\r\n        }\r\n\r\n        if (result.role === \"admin\") {\r\n          // Admin bypasses MFA verification\r\n          setLoginAlert({\r\n            type: \"success\",\r\n            message: \"Login Successful as Admin!\",\r\n          });\r\n\r\n          setHideForm(true);\r\n          setIsLoggedIn(true); // Directly mark as logged in\r\n\r\n          // Delay the navigation to allow alert to be visible\r\n          setTimeout(() => {\r\n            setVerifyAlert(null); // Clear alert\r\n            navigate(\"/\"); // Redirect to home page\r\n          }, 1000); // 1-second delay for the alert visibility\r\n        } else {\r\n          // Regular users proceed with MFA verification\r\n          setVerifyAlert({\r\n            type: \"success\",\r\n            message: \"MFA code sent to your email.\",\r\n          });\r\n          setTimeout(() => {\r\n            setVerifyAlert(null);\r\n          }, 5000);\r\n          setStep(\"verify\"); // Move to code verification step\r\n        }\r\n      } else {\r\n        // Handle invalid credentials\r\n        setVerifyAlert({\r\n          type: \"error\",\r\n          message: result.message || \"Invalid credentials.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n          setIsLoggedIn(false);\r\n          setHideForm(false);\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      // Handle server connection error\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: \"Error connecting to the server. Please try again.\",\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n        setIsLoggedIn(false);\r\n        setHideForm(false);\r\n      }, 3000);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Verify MFA Code\r\n  const handleVerifyCode = async () => {\r\n    setLoading(true);\r\n    setVerifyAlert(null); // Clear existing alert\r\n    setLoginAlert(null);\r\n    setHideForm(false);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/mfa/verify-code`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ username, code: mfaCode }),\r\n        }\r\n      );\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        setVerifyAlert({\r\n          type: \"success\",\r\n          message: result.message || \"MFA verification successful.\",\r\n        });\r\n\r\n        const userId = localStorage.getItem(\"user_id\"); // Retrieve userId from local storage\r\n        await updateUserLoggedInStatus(userId, true); // Mark user as logged in in the database\r\n\r\n        // Hide the form and show loading spinner in the middle\r\n        setTimeout(() => {\r\n          setHideForm(true); // Hide the form\r\n          setLoading(true); // Keep showing the loading spinner in the middle\r\n\r\n          // Final navigation after delay\r\n          setTimeout(() => {\r\n            setIsLoggedIn(true); // Update login state\r\n            setUser({ username: username, role: result.role }); // Set full user object\r\n            navigate(\"/\"); // Redirect to home page\r\n          }, 3000); // 3-second delay for loading spinner\r\n        }, 1000); // Short delay to hide form\r\n      } else {\r\n        setVerifyAlert({\r\n          type: \"error\",\r\n          message: result.message || \"Invalid MFA code.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n          setLoading(false);\r\n        }, 2000); // 2-second delay to delete the alert\r\n      }\r\n    } catch (error) {\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: \"Error verifying the MFA code. Please try again.\",\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n        setLoading(false);\r\n      }, 2000); // 2-second delay to clear alert\r\n    }\r\n  };\r\n\r\n  // Resend Code Function\r\n  const handleResendCode = async () => {\r\n    setLoginAlert(null); // Clear existing alert\r\n    setVerifyAlert(null); // Clear existing alert\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/mfa/send-code`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n        }, 2000);\r\n      } else {\r\n        const result = await response.json();\r\n        setVerifyAlert({\r\n          type: \"error\",\r\n          message: result.message || \"Failed to resend the code.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: \"Error resending the code. Please try again.\",\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  //Send link via user email\r\n  const handleSendLink = async (e) => {\r\n    e.preventDefault();\r\n    const inputEmail = email;\r\n    setEmail(inputEmail);\r\n    setLoginAlert(null);\r\n    setLoading(true);\r\n    setHideForm(false); // No Hide the registration form\r\n    setVerifyAlert(null); // Clear existing alert\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/users/send-verification-by-email/${email}`,\r\n        {\r\n          method: \"POST\",\r\n        }\r\n      );\r\n      //const result = await response.json();\r\n      if (response.ok) {\r\n        // Admin bypasses MFA verification\r\n        setLoginAlert({\r\n          type: \"success\",\r\n          message: \"MFA link sent successfully.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null); // Clear alert\r\n          setLoginAlert(null);\r\n          navigate(\"/\"); // Redirect to home page\r\n        }, 3000);\r\n      } else {\r\n        setEmail(\"\");\r\n        setLoginAlert({\r\n          type: \"error\",\r\n          message: `Error sending the link to ${inputEmail}. Please try again.`,\r\n        });\r\n        setTimeout(() => {\r\n          setLoginAlert(null);\r\n          setStep(\"Link\");\r\n          setLoading(false);\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: `Error sending the link to ${inputEmail}. Please try again.`,\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const updateUserLoggedInStatus = async (userId, isLoggedIn) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5050/api/users/update-login-status`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ userId, isLoggedIn }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        console.error(\"Failed to update login status:\", response.status);\r\n      } else {\r\n        console.log(\"User login status updated successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating login status:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-register-page\">\r\n      {/* Show alert for success or error */}\r\n      {loginAlert && (\r\n        <div\r\n          className={`alert-container ${\r\n            loginAlert.type === \"success\" ? \"alert-center\" : \"\"\r\n          }`}\r\n        >\r\n          <Alert severity={loginAlert.type}>{loginAlert.message}</Alert>\r\n        </div>\r\n      )}\r\n\r\n      {verifyAlert && (\r\n        <div\r\n          className={`verify-alert-container verify-${\r\n            verifyAlert.type === \"success\" ? \"alert-center\" : \"\"\r\n          }`}\r\n        >\r\n          <Alert severity={verifyAlert.type} className=\"custom-verify-alert\">\r\n            {verifyAlert.message}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show loading spinner for Login */}\r\n      {loading && (\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Processing...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Login Form */}\r\n      {step === \"login\" && !loading && !hideForm && (\r\n        <div className=\"form-container\">\r\n          <form className=\"form\" onSubmit={handleLoginSubmit}>\r\n            <h2>Login</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\">Login</button>\r\n            <p>\r\n              No account?{\" \"}\r\n              <span className=\"switch-form\" onClick={() => setIsRegister(true)}>\r\n                Register\r\n              </span>\r\n              <br></br>\r\n              <span className=\"switch-form\" onClick={() => setStep(\"Link\")}>\r\n                Forgot Password?\r\n              </span>\r\n            </p>\r\n          </form>\r\n          <div className=\"google-login\">\r\n            <h3>Or Login with Google</h3>\r\n            <GoogleLogin\r\n              onSuccess={handleGoogleLoginSuccess}\r\n              onError={handleGoogleLoginError}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Verify Code Step */}\r\n      {step === \"verify\" && !loading && (\r\n        <div className=\"form-container\">\r\n          <h2 className=\"verify-title\">Verify Your Code</h2>\r\n          <p className=\"verify-instructions\">\r\n            A 6-digit verification code has been sent to your email. Please\r\n            enter it below.\r\n          </p>\r\n\r\n          {/* Input for MFA Code */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter 6-digit code\"\r\n            value={mfaCode}\r\n            onChange={(e) => setMfaCode(e.target.value)}\r\n            maxLength=\"6\"\r\n            className=\"verify-input\"\r\n            required\r\n          />\r\n\r\n          {/* Verify Button */}\r\n          <button\r\n            onClick={handleVerifyCode}\r\n            className=\"verify-button\"\r\n            disabled={!mfaCode || mfaCode.length !== 6}\r\n          >\r\n            Verify Code\r\n          </button>\r\n\r\n          {/* Back to Login Button */}\r\n          <button\r\n            onClick={() => setStep(\"login\")}\r\n            className=\"back-to-login-button\"\r\n          >\r\n            Go Back to Login\r\n          </button>\r\n\r\n          {/* Timer for Auto Resend */}\r\n          <p className=\"timer-text\">\r\n            A new code will be sent automatically in {timer}s.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Send link to email step */}\r\n      {step === \"Link\" && !loading && (\r\n        <div className=\"form-container\">\r\n          <div className=\"form\">\r\n            <h2 className=\"verify-title\">Forgot Password</h2>\r\n            <p className=\"verify-instructions\">\r\n              Please enter your email and change your password with the link.\r\n            </p>\r\n\r\n            {/* Input Email */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              autoFocus\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              maxLength=\"\"\r\n              className=\"input\"\r\n              required\r\n            />\r\n\r\n            {/* send link Button */}\r\n            <button onClick={handleSendLink} className=\"button\">\r\n              Send Link\r\n            </button>\r\n\r\n            {/* Back to Login Button */}\r\n            <button\r\n              onClick={() => setStep(\"login\")}\r\n              className=\"back-to-login-button\"\r\n            >\r\n              Go Back to Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}