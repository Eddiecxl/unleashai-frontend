{"ast":null,"code":"import React,{useRef,useState,useEffect}from\"react\";import{GoogleLogin}from\"@react-oauth/google\";import{jwtDecode}from\"jwt-decode\";import Alert from\"@mui/material/Alert\";import{useNavigate}from\"react-router-dom\";import\"./LoginRegister.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{setIsLoggedIn,setIsRegister,setUser}=_ref;const navigate=useNavigate();const[loginAlert,setLoginAlert]=useState(null);const[loading,setLoading]=useState(false);const[step,setStep]=useState(\"login\");// 'login' | 'mfa'\n// const [email, setEmail] = useState('');\nconst[username,setUsername]=useState(\"\");const[password,setPassword]=useState(\"\");const[hideForm,setHideForm]=useState(false);const[mfaCode,setMfaCode]=useState(\"\");const[email,setEmail]=useState(\"\");const[timer,setTimer]=useState(60);// const [resendDisabled, setResendDisabled] = useState(true);\nconst[verifyAlert,setVerifyAlert]=useState(null);const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;// Google Login Handler\nconst handleGoogleLoginSuccess=async credentialResponse=>{const decoded=jwtDecode(credentialResponse.credential);setHideForm(true);setIsLoggedIn(true);setUser({username:decoded.name,role:\"normal\"});// Set full user object\nsetLoginAlert({type:\"success\",message:\"Welcome, \".concat(decoded.name,\"!\")});setTimeout(()=>navigate(\"/\"),2000);};const handleGoogleLoginError=()=>{setLoginAlert({type:\"error\",message:\"Google login failed.\"});};useEffect(()=>{if(step===\"verify\"&&timer>0){const countdown=setInterval(()=>{setTimer(prev=>prev-1);},1000);return()=>clearInterval(countdown);// Clear interval on component unmount\n}else if(timer===0){handleResendCode();// Automatically resend code after 1 minute\nsetTimer(60);// Reset the timer\n}},[step,timer]);// Send Credentials to Backend for Validation and Request MFA Code\nconst handleLoginSubmit=async e=>{e.preventDefault();const inputUsername=e.target.username.value;const inputPassword=e.target.password.value;setUsername(inputUsername);setPassword(inputPassword);setLoginAlert(null);setLoading(true);setHideForm(false);// No Hide the registration form\nsetVerifyAlert(null);// Clear existing alert\ntry{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/mfa/send-code\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username:inputUsername,password:inputPassword})});const result=await response.json();if(response.ok){console.log(\"API Response:\",result);// Debug the response\nsetUser({username,role:result.role});// Use the role from response\nconsole.log(\"Logged in as: \".concat(result.role));// Debug the role\n// Fetch and save userId\nconst userIdResponse=await fetch(\"\".concat(API_BASE_URL,\"/api/users/get-user-id?username=\").concat(encodeURIComponent(inputUsername)),{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(userIdResponse.ok){const userIdData=await userIdResponse.json();localStorage.setItem(\"user_id\",userIdData.userId);// Save userId to local storage\nconsole.log(\"User ID:\",userIdData.userId);}else{console.error(\"Failed to fetch user ID:\",userIdResponse.status);}if(result.role===\"admin\"){// Admin bypasses MFA verification\nsetLoginAlert({type:\"success\",message:\"Login Successful as Admin!\"});setHideForm(true);setIsLoggedIn(true);// Directly mark as logged in\n// Delay the navigation to allow alert to be visible\nsetTimeout(()=>{setVerifyAlert(null);// Clear alert\nnavigate(\"/\");// Redirect to home page\n},1000);// 1-second delay for the alert visibility\n}else{// Regular users proceed with MFA verification\nsetVerifyAlert({type:\"success\",message:\"MFA code sent to your email.\"});setTimeout(()=>{setVerifyAlert(null);},5000);setStep(\"verify\");// Move to code verification step\n}}else{// Handle invalid credentials\nsetVerifyAlert({type:\"error\",message:result.message||\"Invalid credentials.\"});setTimeout(()=>{setVerifyAlert(null);setIsLoggedIn(false);setHideForm(false);},3000);}}catch(error){// Handle server connection error\nsetVerifyAlert({type:\"error\",message:\"Error connecting to the server. Please try again.\"});setTimeout(()=>{setVerifyAlert(null);setIsLoggedIn(false);setHideForm(false);},3000);}finally{setLoading(false);}};// Verify MFA Code\nconst handleVerifyCode=async()=>{setLoading(true);setVerifyAlert(null);// Clear existing alert\nsetLoginAlert(null);setHideForm(false);try{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/mfa/verify-code\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,code:mfaCode})});const result=await response.json();if(response.ok){setVerifyAlert({type:\"success\",message:result.message||\"MFA verification successful.\"});const userId=localStorage.getItem(\"user_id\");// Retrieve userId from local storage\n//await updateUserLoggedInStatus(userId, true); // Mark user as logged in in the database\n// Hide the form and show loading spinner in the middle\nsetTimeout(()=>{setHideForm(true);// Hide the form\nsetLoading(true);// Keep showing the loading spinner in the middle\n// Final navigation after delay\nsetTimeout(()=>{setIsLoggedIn(true);// Update login state\nsetUser({username:username,role:result.role});// Set full user object\nnavigate(\"/\");// Redirect to home page\n},3000);// 3-second delay for loading spinner\n},1000);// Short delay to hide form\n}else{setVerifyAlert({type:\"error\",message:result.message||\"Invalid MFA code.\"});setTimeout(()=>{setVerifyAlert(null);setLoading(false);},2000);// 2-second delay to delete the alert\n}}catch(error){setVerifyAlert({type:\"error\",message:\"Error verifying the MFA code. Please try again.\"});setTimeout(()=>{setVerifyAlert(null);setLoading(false);},2000);// 2-second delay to clear alert\n}};// Resend Code Function\nconst handleResendCode=async()=>{setLoginAlert(null);// Clear existing alert\nsetVerifyAlert(null);// Clear existing alert\ntry{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/mfa/send-code\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})});if(response.ok){setTimeout(()=>{setVerifyAlert(null);},2000);}else{const result=await response.json();setVerifyAlert({type:\"error\",message:result.message||\"Failed to resend the code.\"});setTimeout(()=>{setVerifyAlert(null);},2000);}}catch(error){setVerifyAlert({type:\"error\",message:\"Error resending the code. Please try again.\"});setTimeout(()=>{setVerifyAlert(null);},2000);}};//Send link via user email\nconst handleSendLink=async e=>{e.preventDefault();const inputEmail=email;setEmail(inputEmail);setLoginAlert(null);setLoading(true);setHideForm(false);// No Hide the registration form\nsetVerifyAlert(null);// Clear existing alert\ntry{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/users/send-verification-by-email/\").concat(email),{method:\"POST\"});//const result = await response.json();\nif(response.ok){// Admin bypasses MFA verification\nsetLoginAlert({type:\"success\",message:\"MFA link sent successfully.\"});setTimeout(()=>{setVerifyAlert(null);// Clear alert\nsetLoginAlert(null);navigate(\"/\");// Redirect to home page\n},3000);}else{setEmail(\"\");setLoginAlert({type:\"error\",message:\"Error sending the link to \".concat(inputEmail,\". Please try again.\")});setTimeout(()=>{setLoginAlert(null);setStep(\"Link\");setLoading(false);},2000);}}catch(error){setVerifyAlert({type:\"error\",message:\"Error sending the link to \".concat(inputEmail,\". Please try again.\")});setTimeout(()=>{setVerifyAlert(null);},2000);}};// const updateUserLoggedInStatus = async (userId, isLoggedIn) => {\n//   try {\n//     const response = await fetch(\n//       `${API_BASE_URL}/api/users/update-login-status`,\n//       {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ userId, isLoggedIn }),\n//       }\n//     );\n//     if (!response.ok) {\n//       console.error(\"Failed to update login status:\", response.status);\n//     } else {\n//       console.log(\"User login status updated successfully\");\n//     }\n//   } catch (error) {\n//     console.error(\"Error updating login status:\", error);\n//   }\n// };\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"login-register-page\",children:[loginAlert&&/*#__PURE__*/_jsx(\"div\",{className:\"alert-container \".concat(loginAlert.type===\"success\"?\"alert-center\":\"\"),children:/*#__PURE__*/_jsx(Alert,{severity:loginAlert.type,children:loginAlert.message})}),verifyAlert&&/*#__PURE__*/_jsx(\"div\",{className:\"verify-alert-container verify-\".concat(verifyAlert.type===\"success\"?\"alert-center\":\"\"),children:/*#__PURE__*/_jsx(Alert,{severity:verifyAlert.type,className:\"custom-verify-alert\",children:verifyAlert.message})}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-spinner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Processing...\"})]}),step===\"login\"&&!loading&&!hideForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleLoginSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"No account?\",\" \",/*#__PURE__*/_jsx(\"span\",{className:\"switch-form\",onClick:()=>setIsRegister(true),children:\"Register\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"switch-form\",onClick:()=>setStep(\"Link\"),children:\"Forgot Password?\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"google-login\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Or Login with Google\"}),/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:handleGoogleLoginSuccess,onError:handleGoogleLoginError})]})]}),step===\"verify\"&&!loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"verify-title\",children:\"Verify Your Code\"}),/*#__PURE__*/_jsx(\"p\",{className:\"verify-instructions\",children:\"A 6-digit verification code has been sent to your email. Please enter it below.\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter 6-digit code\",value:mfaCode,onChange:e=>setMfaCode(e.target.value),maxLength:\"6\",className:\"verify-input\",required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVerifyCode,className:\"verify-button\",disabled:!mfaCode||mfaCode.length!==6,children:\"Verify Code\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setStep(\"login\"),className:\"back-to-login-button\",children:\"Go Back to Login\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"timer-text\",children:[\"A new code will be sent automatically in \",timer,\"s.\"]})]}),step===\"Link\"&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"verify-title\",children:\"Forgot Password\"}),/*#__PURE__*/_jsx(\"p\",{className:\"verify-instructions\",children:\"Please enter your email and change your password with the link.\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Email\",value:email,autoFocus:true,onChange:e=>setEmail(e.target.value),maxLength:\"\",className:\"input\",required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendLink,className:\"button\",children:\"Send Link\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setStep(\"login\"),className:\"back-to-login-button\",children:\"Go Back to Login\"})]})})]});}export default Login;","map":{"version":3,"names":["React","useRef","useState","useEffect","GoogleLogin","jwtDecode","Alert","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","_ref","setIsLoggedIn","setIsRegister","setUser","navigate","loginAlert","setLoginAlert","loading","setLoading","step","setStep","username","setUsername","password","setPassword","hideForm","setHideForm","mfaCode","setMfaCode","email","setEmail","timer","setTimer","verifyAlert","setVerifyAlert","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","handleGoogleLoginSuccess","credentialResponse","decoded","credential","name","role","type","message","concat","setTimeout","handleGoogleLoginError","countdown","setInterval","prev","clearInterval","handleResendCode","handleLoginSubmit","e","preventDefault","inputUsername","target","value","inputPassword","response","fetch","method","headers","body","JSON","stringify","result","json","ok","console","log","userIdResponse","encodeURIComponent","userIdData","localStorage","setItem","userId","error","status","handleVerifyCode","code","getItem","handleSendLink","inputEmail","className","children","severity","onSubmit","placeholder","onChange","required","onClick","onSuccess","onError","maxLength","disabled","length","autoFocus"],"sources":["C:/Users/echa328/Downloads/Unleashed-Frontend-Repo/src/components/Login.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./LoginRegister.css\";\r\n\r\nfunction Login({ setIsLoggedIn, setIsRegister, setUser }) {\r\n  const navigate = useNavigate();\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [step, setStep] = useState(\"login\"); // 'login' | 'mfa'\r\n  // const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [hideForm, setHideForm] = useState(false);\r\n  const [mfaCode, setMfaCode] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [timer, setTimer] = useState(60);\r\n  // const [resendDisabled, setResendDisabled] = useState(true);\r\n  const [verifyAlert, setVerifyAlert] = useState(null);\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL\r\n\r\n  // Google Login Handler\r\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\r\n    const decoded = jwtDecode(credentialResponse.credential);\r\n    setHideForm(true);\r\n    setIsLoggedIn(true);\r\n    setUser({ username: decoded.name, role: \"normal\" }); // Set full user object\r\n    setLoginAlert({ type: \"success\", message: `Welcome, ${decoded.name}!` });\r\n    setTimeout(() => navigate(\"/\"), 2000);\r\n  };\r\n\r\n  const handleGoogleLoginError = () => {\r\n    setLoginAlert({ type: \"error\", message: \"Google login failed.\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (step === \"verify\" && timer > 0) {\r\n      const countdown = setInterval(() => {\r\n        setTimer((prev) => prev - 1);\r\n      }, 1000);\r\n\r\n      return () => clearInterval(countdown); // Clear interval on component unmount\r\n    } else if (timer === 0) {\r\n      handleResendCode(); // Automatically resend code after 1 minute\r\n      setTimer(60); // Reset the timer\r\n    }\r\n  }, [step, timer]);\r\n\r\n  // Send Credentials to Backend for Validation and Request MFA Code\r\n  const handleLoginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const inputUsername = e.target.username.value;\r\n    const inputPassword = e.target.password.value;\r\n\r\n    setUsername(inputUsername);\r\n    setPassword(inputPassword);\r\n    setLoginAlert(null);\r\n    setLoading(true);\r\n    setHideForm(false); // No Hide the registration form\r\n    setVerifyAlert(null); // Clear existing alert\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/mfa/send-code`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          username: inputUsername,\r\n          password: inputPassword,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log(\"API Response:\", result); // Debug the response\r\n        setUser({ username, role: result.role }); // Use the role from response\r\n\r\n        console.log(`Logged in as: ${result.role}`); // Debug the role\r\n\r\n        // Fetch and save userId\r\n        const userIdResponse = await fetch(\r\n          `${API_BASE_URL}/api/users/get-user-id?username=${encodeURIComponent(inputUsername)}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        );\r\n\r\n        if (userIdResponse.ok) {\r\n          const userIdData = await userIdResponse.json();\r\n          localStorage.setItem(\"user_id\", userIdData.userId); // Save userId to local storage\r\n          console.log(\"User ID:\", userIdData.userId);\r\n        } else {\r\n          console.error(\"Failed to fetch user ID:\", userIdResponse.status);\r\n        }\r\n\r\n        if (result.role === \"admin\") {\r\n          // Admin bypasses MFA verification\r\n          setLoginAlert({\r\n            type: \"success\",\r\n            message: \"Login Successful as Admin!\",\r\n          });\r\n\r\n          setHideForm(true);\r\n          setIsLoggedIn(true); // Directly mark as logged in\r\n\r\n          // Delay the navigation to allow alert to be visible\r\n          setTimeout(() => {\r\n            setVerifyAlert(null); // Clear alert\r\n            navigate(\"/\"); // Redirect to home page\r\n          }, 1000); // 1-second delay for the alert visibility\r\n        } else {\r\n          // Regular users proceed with MFA verification\r\n          setVerifyAlert({\r\n            type: \"success\",\r\n            message: \"MFA code sent to your email.\",\r\n          });\r\n          setTimeout(() => {\r\n            setVerifyAlert(null);\r\n          }, 5000);\r\n          setStep(\"verify\"); // Move to code verification step\r\n        }\r\n      } else {\r\n        // Handle invalid credentials\r\n        setVerifyAlert({\r\n          type: \"error\",\r\n          message: result.message || \"Invalid credentials.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n          setIsLoggedIn(false);\r\n          setHideForm(false);\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      // Handle server connection error\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: \"Error connecting to the server. Please try again.\",\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n        setIsLoggedIn(false);\r\n        setHideForm(false);\r\n      }, 3000);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Verify MFA Code\r\n  const handleVerifyCode = async () => {\r\n    setLoading(true);\r\n    setVerifyAlert(null); // Clear existing alert\r\n    setLoginAlert(null);\r\n    setHideForm(false);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/mfa/verify-code`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ username, code: mfaCode }),\r\n        }\r\n      );\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        setVerifyAlert({\r\n          type: \"success\",\r\n          message: result.message || \"MFA verification successful.\",\r\n        });\r\n\r\n        const userId = localStorage.getItem(\"user_id\"); // Retrieve userId from local storage\r\n        //await updateUserLoggedInStatus(userId, true); // Mark user as logged in in the database\r\n\r\n        // Hide the form and show loading spinner in the middle\r\n        setTimeout(() => {\r\n          setHideForm(true); // Hide the form\r\n          setLoading(true); // Keep showing the loading spinner in the middle\r\n\r\n          // Final navigation after delay\r\n          setTimeout(() => {\r\n            setIsLoggedIn(true); // Update login state\r\n            setUser({ username: username, role: result.role }); // Set full user object\r\n            navigate(\"/\"); // Redirect to home page\r\n          }, 3000); // 3-second delay for loading spinner\r\n        }, 1000); // Short delay to hide form\r\n      } else {\r\n        setVerifyAlert({\r\n          type: \"error\",\r\n          message: result.message || \"Invalid MFA code.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n          setLoading(false);\r\n        }, 2000); // 2-second delay to delete the alert\r\n      }\r\n    } catch (error) {\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: \"Error verifying the MFA code. Please try again.\",\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n        setLoading(false);\r\n      }, 2000); // 2-second delay to clear alert\r\n    }\r\n  };\r\n\r\n  // Resend Code Function\r\n  const handleResendCode = async () => {\r\n    setLoginAlert(null); // Clear existing alert\r\n    setVerifyAlert(null); // Clear existing alert\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/mfa/send-code`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n        }, 2000);\r\n      } else {\r\n        const result = await response.json();\r\n        setVerifyAlert({\r\n          type: \"error\",\r\n          message: result.message || \"Failed to resend the code.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null);\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: \"Error resending the code. Please try again.\",\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  //Send link via user email\r\n  const handleSendLink = async (e) => {\r\n    e.preventDefault();\r\n    const inputEmail = email;\r\n    setEmail(inputEmail);\r\n    setLoginAlert(null);\r\n    setLoading(true);\r\n    setHideForm(false); // No Hide the registration form\r\n    setVerifyAlert(null); // Clear existing alert\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/users/send-verification-by-email/${email}`,\r\n        {\r\n          method: \"POST\",\r\n        }\r\n      );\r\n      //const result = await response.json();\r\n      if (response.ok) {\r\n        // Admin bypasses MFA verification\r\n        setLoginAlert({\r\n          type: \"success\",\r\n          message: \"MFA link sent successfully.\",\r\n        });\r\n        setTimeout(() => {\r\n          setVerifyAlert(null); // Clear alert\r\n          setLoginAlert(null);\r\n          navigate(\"/\"); // Redirect to home page\r\n        }, 3000);\r\n      } else {\r\n        setEmail(\"\");\r\n        setLoginAlert({\r\n          type: \"error\",\r\n          message: `Error sending the link to ${inputEmail}. Please try again.`,\r\n        });\r\n        setTimeout(() => {\r\n          setLoginAlert(null);\r\n          setStep(\"Link\");\r\n          setLoading(false);\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      setVerifyAlert({\r\n        type: \"error\",\r\n        message: `Error sending the link to ${inputEmail}. Please try again.`,\r\n      });\r\n      setTimeout(() => {\r\n        setVerifyAlert(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  // const updateUserLoggedInStatus = async (userId, isLoggedIn) => {\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       `${API_BASE_URL}/api/users/update-login-status`,\r\n  //       {\r\n  //         method: \"PUT\",\r\n  //         headers: { \"Content-Type\": \"application/json\" },\r\n  //         body: JSON.stringify({ userId, isLoggedIn }),\r\n  //       }\r\n  //     );\r\n\r\n  //     if (!response.ok) {\r\n  //       console.error(\"Failed to update login status:\", response.status);\r\n  //     } else {\r\n  //       console.log(\"User login status updated successfully\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error updating login status:\", error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"login-register-page\">\r\n      {/* Show alert for success or error */}\r\n      {loginAlert && (\r\n        <div\r\n          className={`alert-container ${\r\n            loginAlert.type === \"success\" ? \"alert-center\" : \"\"\r\n          }`}\r\n        >\r\n          <Alert severity={loginAlert.type}>{loginAlert.message}</Alert>\r\n        </div>\r\n      )}\r\n\r\n      {verifyAlert && (\r\n        <div\r\n          className={`verify-alert-container verify-${\r\n            verifyAlert.type === \"success\" ? \"alert-center\" : \"\"\r\n          }`}\r\n        >\r\n          <Alert severity={verifyAlert.type} className=\"custom-verify-alert\">\r\n            {verifyAlert.message}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show loading spinner for Login */}\r\n      {loading && (\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Processing...</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Login Form */}\r\n      {step === \"login\" && !loading && !hideForm && (\r\n        <div className=\"form-container\">\r\n          <form className=\"form\" onSubmit={handleLoginSubmit}>\r\n            <h2>Login</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\">Login</button>\r\n            <p>\r\n              No account?{\" \"}\r\n              <span className=\"switch-form\" onClick={() => setIsRegister(true)}>\r\n                Register\r\n              </span>\r\n              <br></br>\r\n              <span className=\"switch-form\" onClick={() => setStep(\"Link\")}>\r\n                Forgot Password?\r\n              </span>\r\n            </p>\r\n          </form>\r\n          <div className=\"google-login\">\r\n            <h3>Or Login with Google</h3>\r\n            <GoogleLogin\r\n              onSuccess={handleGoogleLoginSuccess}\r\n              onError={handleGoogleLoginError}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Verify Code Step */}\r\n      {step === \"verify\" && !loading && (\r\n        <div className=\"form-container\">\r\n          <h2 className=\"verify-title\">Verify Your Code</h2>\r\n          <p className=\"verify-instructions\">\r\n            A 6-digit verification code has been sent to your email. Please\r\n            enter it below.\r\n          </p>\r\n\r\n          {/* Input for MFA Code */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter 6-digit code\"\r\n            value={mfaCode}\r\n            onChange={(e) => setMfaCode(e.target.value)}\r\n            maxLength=\"6\"\r\n            className=\"verify-input\"\r\n            required\r\n          />\r\n\r\n          {/* Verify Button */}\r\n          <button\r\n            onClick={handleVerifyCode}\r\n            className=\"verify-button\"\r\n            disabled={!mfaCode || mfaCode.length !== 6}\r\n          >\r\n            Verify Code\r\n          </button>\r\n\r\n          {/* Back to Login Button */}\r\n          <button\r\n            onClick={() => setStep(\"login\")}\r\n            className=\"back-to-login-button\"\r\n          >\r\n            Go Back to Login\r\n          </button>\r\n\r\n          {/* Timer for Auto Resend */}\r\n          <p className=\"timer-text\">\r\n            A new code will be sent automatically in {timer}s.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Send link to email step */}\r\n      {step === \"Link\" && !loading && (\r\n        <div className=\"form-container\">\r\n          <div className=\"form\">\r\n            <h2 className=\"verify-title\">Forgot Password</h2>\r\n            <p className=\"verify-instructions\">\r\n              Please enter your email and change your password with the link.\r\n            </p>\r\n\r\n            {/* Input Email */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              autoFocus\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              maxLength=\"\"\r\n              className=\"input\"\r\n              required\r\n            />\r\n\r\n            {/* send link Button */}\r\n            <button onClick={handleSendLink} className=\"button\">\r\n              Send Link\r\n            </button>\r\n\r\n            {/* Back to Login Button */}\r\n            <button\r\n              onClick={() => setStep(\"login\")}\r\n              className=\"back-to-login-button\"\r\n            >\r\n              Go Back to Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}